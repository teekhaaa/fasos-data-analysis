drop table if exists driver;
CREATE TABLE driver(driver_id integer,reg_date date); 

INSERT INTO driver(driver_id,reg_date) 
 VALUES (1,'01-01-2021'),
(2,'01-03-2021'),
(3,'01-08-2021'),
(4,'01-15-2021');


drop table if exists ingredients;
CREATE TABLE ingredients(ingredients_id integer,ingredients_name varchar(60)); 

INSERT INTO ingredients(ingredients_id ,ingredients_name) 
 VALUES (1,'BBQ Chicken'),
(2,'Chilli Sauce'),
(3,'Chicken'),
(4,'Cheese'),
(5,'Kebab'),
(6,'Mushrooms'),
(7,'Onions'),
(8,'Egg'),
(9,'Peppers'),
(10,'schezwan sauce'),
(11,'Tomatoes'),
(12,'Tomato Sauce');

drop table if exists rolls;
CREATE TABLE rolls(roll_id integer,roll_name varchar(30)); 

INSERT INTO rolls(roll_id ,roll_name) 
 VALUES (1	,'Non Veg Roll'),
(2	,'Veg Roll');

drop table if exists rolls_recipes;
CREATE TABLE rolls_recipes(roll_id integer,ingredients varchar(24)); 

INSERT INTO rolls_recipes(roll_id ,ingredients) 
 VALUES (1,'1,2,3,4,5,6,8,10'),
(2,'4,6,7,9,11,12');

drop table if exists driver_order;
CREATE TABLE driver_order ( order_id INT, driver_id INT, pickup_time DATETIME, distance VARCHAR(15), duration VARCHAR(15), 
cancellation VARCHAR(25));

INSERT INTO driver_order (order_id, driver_id, pickup_time, distance, duration, cancellation) 
VALUES
(1, 1, '2021-01-01 18:15:34', '20km', '32 minutes', NULL),
(2, 1, '2021-01-01 19:10:54', '20km', '27 minutes', NULL),
(3, 1, '2021-01-03 00:12:37', '13.4km', '20 mins', NULL),
(4, 2, '2021-01-04 13:53:03', '23.4km', '40 minutes', NULL),
(5, 3, '2021-01-08 21:10:57', '10km', '15 minutes', NULL),
(6, 3, NULL, NULL, NULL, 'Cancellation'),
(7, 2, '2020-08-01 21:30:45', '25km', '25 mins', NULL),
(8, 2, '2020-10-01 00:15:02', '23.4km', '15 minutes', NULL),
(9, 2, NULL, NULL, NULL, 'Customer Cancellation'),
(10, 1, '2020-11-01 18:50:20', '10km', '10 minutes', NULL);

DROP TABLE IF EXISTS customer_orders;

CREATE TABLE customer_orders (order_id INT, customer_id INT, roll_id INT, not_include_items VARCHAR(20),
    extra_items_included VARCHAR(20),order_date DATETIME);

INSERT INTO customer_orders (order_id, customer_id, roll_id, not_include_items, extra_items_included, order_date)
VALUES
(1, 101, 1, '', '', '2021-01-01 18:05:02'),
(2, 101, 1, '', '', '2021-01-01 19:00:52'),
(3, 102, 1, '', '', '2021-02-01 23:51:23'),
(4, 102, 2, '', NULL, '2021-02-01 23:51:23'),
(5, 103, 1, '4', '', '2021-04-01 13:23:46'),
(6, 103, 2, '4', '', '2021-04-01 13:23:46'),
(7, 104, 1, NULL, '1', '2021-08-01 21:00:29'),
(8, 101, 2, NULL, NULL, '2021-08-01 21:03:13'),
(9, 105, 2, NULL, '1', '2021-08-01 21:20:29'),
(10, 102, 1, NULL, NULL, '2021-09-01 23:54:33'),
(11, 103, 1, '4', '1,5', '2021-10-01 11:22:59'),
(12, 104, 1, NULL, NULL, '2021-11-01 18:34:49'),
(13, 104, 1, '2,6', '1,4', '2021-11-01 18:34:49');

select * from customer_orders;
select * from driver_order;
select * from ingredients;
select * from driver;
select * from rolls;
select * from rolls_recipes;


--- how many of each type of roll was delivered?

select * from
(select *, case when cancellation in ('Cancellation', 'Customer Cancellation') then 'c' else 'nc' end order_cancel_det from driver_order)a
where order_cancel_det = 'nc';

select * from customer_orders where order_id in (
select order_id from
(select *, case when cancellation in ('Cancellation', 'Customer Cancellation') then 'c' else 'nc' end order_cancel_det from driver_order)a
where order_cancel_det = 'nc');

select roll_id, count(roll_id) from customer_orders 
where order_id in (select order_id from
(select *, case when cancellation in ('Cancellation', 'Customer Cancellation') then 'c' else 'nc' end order_cancel_det from driver_order)a
where order_cancel_det = 'nc')
group by roll_id;

select * from rolls ;

with x as
(select roll_id, count(roll_id) as roll_count from customer_orders 
where order_id in (select order_id from
(select *, case when cancellation in ('Cancellation', 'Customer Cancellation') then 'c' else 'nc' end order_cancel_det from driver_order)a
where order_cancel_det = 'nc')
group by roll_id)
SELECT rolls.*, x.roll_count
FROM rolls
JOIN x ON rolls.roll_id = x.roll_id;

--- How many veg & and non-veg were ordered by each customer?

with a as (
select customer_id, roll_id, count(customer_id) roll_count from customer_orders
group by customer_id, roll_id) 
select a.customer_id,a.roll_id,a.roll_count, rolls.roll_name
from rolls
join a on rolls.roll_id = a.roll_id;


--- What was the max number of rolls delivered in a single order

select * from (
select *, rank() over (order by ccount desc) rankk from (
select order_id, count(roll_id) as ccount from (
select * from customer_orders where order_id in (select order_id from
(select *, case when cancellation in ('Cancellation', 'Customer Cancellation') then 'c' else 'nc' end order_cancel_det from driver_order)a
where order_cancel_det = 'nc'))b
group by order_id )c)d
where rankk = 1


--- For each customer, how many delivered rolls had atleast 1 change and how many had no change?

---crete a temp table

with temp_customer_orders (order_id,customer_id,roll_id,not_include_items,extra_items_included,order_date) AS
(
select order_id,customer_id,roll_id,
case when not_include_items is null or not_include_items = ' ' then '0' else not_include_items end as new_not_include_items,
case when extra_items_included is null or extra_items_included = ' ' or extra_items_included = 'NaN' then '0' else extra_items_included end as new_extra_include_items,
order_date from customer_orders)
select * from temp_customer_orders

with temp_driver_order (order_id,driver_id,pickup_time,distance,duration,cancellation) as
(select order_id,driver_id,pickup_time,distance,duration,
case when cancellation in ('Cancellation','Customer Cancellation') then 0 else 1 end as new_cancellation
from driver_order)
select * from temp_driver_order

select * from temp_customer_orders where order_id in (
select order_id from temp_driver_order where new_cancellation!=0)
